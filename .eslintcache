[{"D:\\Program Files\\todoapp\\src\\index.js":"1","D:\\Program Files\\todoapp\\src\\reportWebVitals.js":"2","D:\\Program Files\\todoapp\\src\\Components\\App.js":"3","D:\\Program Files\\todoapp\\src\\Components\\Header.js":"4","D:\\Program Files\\todoapp\\src\\Components\\FormAddTodo.js":"5","D:\\Program Files\\todoapp\\src\\Components\\Todo.js":"6"},{"size":489,"mtime":1610273982343,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":3577,"mtime":1610363622369,"results":"10","hashOfConfig":"8"},{"size":489,"mtime":1610346716201,"results":"11","hashOfConfig":"8"},{"size":705,"mtime":1610352137068,"results":"12","hashOfConfig":"8"},{"size":865,"mtime":1610431792053,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"aogt6k",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Program Files\\todoapp\\src\\index.js",[],["29","30"],"D:\\Program Files\\todoapp\\src\\reportWebVitals.js",[],"D:\\Program Files\\todoapp\\src\\Components\\App.js",["31","32"],"import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Header from \"./Header\";\r\nimport FormAddTodo from \"./FormAddTodo\";\r\nimport Todo from \"./Todo\";\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        todos : [],\r\n        statusDone : false\r\n    }\r\n\r\n    addTodo(text) {\r\n        this.setState(prevState => {\r\n            return {\r\n                todos : [\r\n                    ...prevState.todos,\r\n                    {key : Date.now(), done : false, text}\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    deleteTodo(key){\r\n        this.setState(prevState => {\r\n            return {\r\n                todos : prevState.todos.filter(item => item.key !== key)\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleTodo(key){\r\n        let { todos } = this.state;\r\n        let item = todos.find(item => item.key === key);\r\n        item.done = ! item.done;\r\n        let newTodos = todos.filter(item => item.key !== key);\r\n        this.setState({\r\n            todos: [\r\n                ...newTodos,\r\n                item\r\n            ]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let {todos , statusDone} = this.state;\r\n        let filterTodos = todos.filter(item => item.done === statusDone)\r\n        return(\r\n            <div className=\"App\">\r\n                <Header />\r\n                <main>\r\n                    <section className=\"jumbotron\">\r\n                        <div className=\"container d-flex flex-column align-items-center\">\r\n                            <h1 className=\"jumbotron-heading\">Welcome!</h1>\r\n                            <p className=\"lead text-muted\">To get started, add some items to your list:</p>\r\n                            <FormAddTodo add={this.addTodo.bind(this)} />\r\n                        </div>\r\n                    </section>\r\n                    <div className=\"todosList\">\r\n                        <div className=\"container\">\r\n                            <div className=\"d-flex flex-column align-items-center \">\r\n                                <nav className=\"col-6 mb-3\">\r\n                                    <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n                                        <a className={`nav-item nav-link font-weight-bold ${!statusDone ? 'active' : ''}`}\r\n                                           id=\"nav-home-tab\" onClick={() => this.setState({statusDone: false})}>undone <span className=\"badge badge-secondary\">{todos.filter(item => item.done === false).length}</span></a>\r\n                                        <a className={`nav-item nav-link font-weight-bold ${statusDone ? 'active' : ''}`}\r\n                                           id=\"nav-profile-tab\" onClick={() => this.setState({statusDone: true})}>done <span className=\"badge badge-success\">{todos.filter(item => item.done === true).length}</span></a>\r\n                                    </div>\r\n                                </nav>\r\n                                {\r\n                                    filterTodos.length === 0 ? <p>there isn't any todos</p> : filterTodos.map(item => <Todo\r\n                                        key={item.key}\r\n                                        item={item}\r\n                                        delete={this.deleteTodo.bind(this)}\r\n                                        done={this.toggleTodo.bind(this)} />)\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","D:\\Program Files\\todoapp\\src\\Components\\Header.js",["33"],"import React from 'react';\r\n\r\n\r\nfunction Header() {\r\n    return(\r\n        <header>\r\n            <div className=\"navbar navbar-dark bg-dark shadow-sm\">\r\n                <div className=\"container d-flex justify-content-between\">\r\n                    <a href=\"#\" className=\"navbar-brand d-flex align-items-center\">\r\n                        <strong>Todo App</strong>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","D:\\Program Files\\todoapp\\src\\Components\\FormAddTodo.js",[],"D:\\Program Files\\todoapp\\src\\Components\\Todo.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":65,"column":41,"nodeType":"40","endLine":66,"endColumn":113},{"ruleId":"38","severity":1,"message":"39","line":67,"column":41,"nodeType":"40","endLine":68,"endColumn":115},{"ruleId":"38","severity":1,"message":"41","line":9,"column":21,"nodeType":"40","endLine":9,"endColumn":84},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]